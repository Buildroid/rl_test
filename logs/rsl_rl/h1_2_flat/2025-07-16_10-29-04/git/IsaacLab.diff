--- git status ---
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   source/isaaclab/isaaclab/envs/mdp/rewards.py
	modified:   source/isaaclab_assets/isaaclab_assets/robots/unitree.py
	modified:   source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	.isaaclab.sh.swp
	materials/
	scripts/tools/mjcf2usd/
	source/isaaclab_assets/data/Robots/
	source/isaaclab_assets/isaaclab_assets/robots/.vscode/
	source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/config/h1_2/

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/source/isaaclab/isaaclab/envs/mdp/rewards.py b/source/isaaclab/isaaclab/envs/mdp/rewards.py
index 20df2a557e..085f6dae5b 100644
--- a/source/isaaclab/isaaclab/envs/mdp/rewards.py
+++ b/source/isaaclab/isaaclab/envs/mdp/rewards.py
@@ -317,3 +317,50 @@ def track_ang_vel_z_exp(
     # compute the error
     ang_vel_error = torch.square(env.command_manager.get_command(command_name)[:, 2] - asset.data.root_ang_vel_b[:, 2])
     return torch.exp(-ang_vel_error / std**2)
+    
+
+
+# def knees_axis_parallel_x(env: ManagerBasedRLEnv, asset_cfg: SceneEntityCfg = SceneEntityCfg("robot")) -> torch.Tensor:
+#     """
+#     Penalize non-parallel orientation of the left and right knees along the X axis.
+#     Encourages the knees to 'look' in the same direction (forward).
+#     """
+#     asset: Articulation = env.scene[asset_cfg.name]
+#     link_names = asset.data.body_names
+
+#     left_knee_idx = link_names.index("left_knee_link")
+#     right_knee_idx = link_names.index("right_knee_link")
+
+#     # Knee rotation matrix
+#     rot_left = asset.data.body_rot_mat_w[:, left_knee_idx]  # (N, 3, 3)
+#     rot_right = asset.data.body_rot_mat_w[:, right_knee_idx]
+
+#     # Ось X — первый столбец матрицы поворота
+#     x_left = rot_left[:, :, 0]  # (N, 3)
+#     x_right = rot_right[:, :, 0]
+
+#     # Косинус угла между векторами = dot product (чем ближе к 1, тем более параллельны)
+#     cos_sim = torch.sum(x_left * x_right, dim=1)
+
+#     # Штраф — насколько они не параллельны (1 - cos(angle))^2
+#     torch.square(1.0 - cos_sim)
+#     return torch.square(1.0 - cos_sim)
+
+def knees_quat_alignment( env: ManagerBasedRLEnv, asset_cfg: SceneEntityCfg = SceneEntityCfg("robot")) -> torch.Tensor:
+    """
+    Penalize non-parallel orientation of knees based on quaternion similarity.
+    """
+    asset: Articulation = env.scene[asset_cfg.name]
+    link_names = asset.data.body_names
+
+    left_knee_idx = link_names.index("left_knee_link")
+    right_knee_idx = link_names.index("right_knee_link")
+
+    q_left = asset.data.body_com_quat_w[:, left_knee_idx]  # (N, 4)
+    q_right = asset.data.body_com_quat_w[:, right_knee_idx]  # (N, 4)
+
+    # Косинус угла между кватернионами (с абсолютом — т.к. q и -q одинаковые)
+    cos_sim = torch.sum(q_left * q_right, dim=1)
+
+    # Штраф: чем меньше сходство — тем больше штраф
+    return torch.square(1.0 - cos_sim)
\ No newline at end of file
diff --git a/source/isaaclab_assets/isaaclab_assets/robots/unitree.py b/source/isaaclab_assets/isaaclab_assets/robots/unitree.py
index 49ceb66830..89fac32be2 100644
--- a/source/isaaclab_assets/isaaclab_assets/robots/unitree.py
+++ b/source/isaaclab_assets/isaaclab_assets/robots/unitree.py
@@ -11,6 +11,7 @@ The following configurations are available:
 * :obj:`UNITREE_GO1_CFG`: Unitree Go1 robot with actuator net model for the legs
 * :obj:`UNITREE_GO2_CFG`: Unitree Go2 robot with DC motor model for the legs
 * :obj:`H1_CFG`: H1 humanoid robot
+* :obj:`H1_2_CFG`: H1-2 humanoid robot
 * :obj:`H1_MINIMAL_CFG`: H1 humanoid robot with minimal collision bodies
 * :obj:`G1_CFG`: G1 humanoid robot
 * :obj:`G1_MINIMAL_CFG`: G1 humanoid robot with minimal collision bodies
@@ -54,7 +55,8 @@ This model is taken from: https://github.com/Improbable-AI/walk-these-ways
 
 UNITREE_A1_CFG = ArticulationCfg(
     spawn=sim_utils.UsdFileCfg(
-        usd_path=f"{ISAACLAB_NUCLEUS_DIR}/Robots/Unitree/A1/a1.usd",
+        # usd_path=f"{ISAACLAB_NUCLEUS_DIR}/Robots/Unitree/A1/a1.usd",
+        usd_path=f"source/isaaclab_assets/data/Robots/A1/a1.usd",
         activate_contact_sensors=True,
         rigid_props=sim_utils.RigidBodyPropertiesCfg(
             disable_gravity=False,
@@ -270,6 +272,220 @@ This configuration removes most collision meshes to speed up simulation.
 """
 
 
+
+H1_2_CFG = ArticulationCfg(
+    # spawn=sim_utils.UsdFileCfg(
+    #     usd_path=f"source/isaaclab_assets/data/Robots/h1_2/h1_2.usd", 
+    spawn=sim_utils.UrdfFileCfg(
+        asset_path=f"source/isaaclab_assets/data/Robots/h1_2/h1_2_simplified.urdf", 
+        fix_base=False,
+        activate_contact_sensors=True,
+        rigid_props=sim_utils.RigidBodyPropertiesCfg(
+            disable_gravity=False,
+            retain_accelerations=False,
+            linear_damping=0.0,
+            angular_damping=0.0,
+            max_linear_velocity=1000.0,
+            max_angular_velocity=1000.0,
+            max_depenetration_velocity=1.0,
+        ),
+        articulation_props=sim_utils.ArticulationRootPropertiesCfg(
+            enabled_self_collisions=False, solver_position_iteration_count=4, solver_velocity_iteration_count=4
+        ),
+        joint_drive=sim_utils.UrdfConverterCfg.JointDriveCfg(
+        drive_type="force",
+        target_type="position",
+        gains=sim_utils.UrdfConverterCfg.JointDriveCfg.PDGainsCfg(
+            stiffness=0.0,
+            damping=0.0,
+        ),
+    ),
+    ),
+    init_state=ArticulationCfg.InitialStateCfg(
+        pos=(0.0, 0.0, 1.05),
+        joint_pos={
+            ".*_hip_yaw_joint": 0.0,
+            ".*_hip_roll_joint": 0.0,
+            ".*_hip_pitch_joint": -0.28,  # -16 degrees
+            ".*_knee_joint": 0.79,  # 45 degrees
+            ".*_ankle_pitch_joint": -0.52,  # -30 degrees
+            ".*_ankle_roll_joint": 0.0,
+            "torso_joint": 0.0,
+            ".*_shoulder_pitch_joint": 0.28,
+            ".*_shoulder_roll_joint": 0.0,
+            ".*_shoulder_yaw_joint": 0.0,
+            ".*_elbow_pitch_joint": 0.52,
+        },
+        joint_vel={".*": 0.0},
+    ),
+    soft_joint_pos_limit_factor=0.9,
+    actuators={
+        "legs": ImplicitActuatorCfg(
+            joint_names_expr=[".*_hip_yaw_joint", ".*_hip_roll_joint", ".*_hip_pitch_joint", ".*_knee_joint", "torso_joint"],
+            effort_limit=300,
+            velocity_limit=100.0,
+            stiffness={
+                ".*_hip_yaw_joint": 150.0,
+                ".*_hip_roll_joint": 150.0,
+                ".*_hip_pitch_joint": 200.0,
+                ".*_knee_joint": 200.0,
+                "torso_joint": 200.0,
+            },
+            damping={
+                ".*_hip_yaw_joint": 5.0,
+                ".*_hip_roll_joint": 5.0,
+                ".*_hip_pitch_joint": 5.0,
+                ".*_knee_joint": 5.0,
+                "torso_joint": 5.0,
+            },
+        ),
+        "feet": ImplicitActuatorCfg(
+            joint_names_expr=[".*_ankle_pitch_joint", ".*_ankle_roll_joint"],
+            effort_limit=100,
+            velocity_limit=100.0,
+            stiffness={".*_ankle_.*": 20.0},
+            damping={".*_ankle_.*": 4.0},
+        ),
+        "arms": ImplicitActuatorCfg(
+            joint_names_expr=[
+                ".*_shoulder_pitch_joint",
+                ".*_shoulder_roll_joint",
+                ".*_shoulder_yaw_joint",
+                ".*_elbow_pitch_joint",
+            ],
+            effort_limit=300,
+            velocity_limit=100.0,
+            stiffness=40.0,
+            damping=10.0,
+            armature={
+                ".*_shoulder_.*": 0.01,
+                ".*_elbow_.*": 0.01,
+            },
+        ),
+    },
+)
+
+"""Configuration for the Unitree H1-2 Humanoid robot. Full body model"""
+# H1_2_CFG = ArticulationCfg(
+#     # spawn=sim_utils.UsdFileCfg(
+#     #     usd_path=f"source/isaaclab_assets/data/Robots/h1_2/h1_2.usd", 
+#     spawn=sim_utils.UrdfFileCfg(
+#         asset_path=f"source/isaaclab_assets/data/Robots/h1_2/h1_2.urdf", 
+#         fix_base=False,
+#         activate_contact_sensors=True,
+#         rigid_props=sim_utils.RigidBodyPropertiesCfg(
+#             disable_gravity=False,
+#             retain_accelerations=False,
+#             linear_damping=0.0,
+#             angular_damping=0.0,
+#             max_linear_velocity=1000.0,
+#             max_angular_velocity=1000.0,
+#             max_depenetration_velocity=1.0,
+#         ),
+#         articulation_props=sim_utils.ArticulationRootPropertiesCfg(
+#             enabled_self_collisions=False, solver_position_iteration_count=4, solver_velocity_iteration_count=4
+#         ),
+#         joint_drive=sim_utils.UrdfConverterCfg.JointDriveCfg(
+#         drive_type="force",
+#         target_type="position",
+#         gains=sim_utils.UrdfConverterCfg.JointDriveCfg.PDGainsCfg(
+#             stiffness=5.0,
+#             damping=0.2,
+#         ),
+#     ),
+#     ),
+#     init_state=ArticulationCfg.InitialStateCfg(
+#         pos=(0.0, 0.0, 1.05),
+#         joint_pos={
+#             ".*_hip_yaw_joint": 0.0,
+#             ".*_hip_roll_joint": 0.0,
+#             ".*_hip_pitch_joint": -0.28,  # -16 degrees
+#             ".*_knee_joint": 0.79,  # 45 degrees
+#             ".*_ankle_pitch_joint": -0.52,  # -30 degrees
+#             ".*_ankle_roll_joint": 0.0,
+
+#             "torso_joint": 0.0,
+
+#             ".*_shoulder_pitch_joint": 0.28,
+#             ".*_shoulder_roll_joint": 0.0,
+#             ".*_shoulder_yaw_joint": 0.0,
+#             ".*_elbow_pitch_joint": 0.52,
+#             ".*_elbow_roll_joint": 0.0,
+
+#             ".*_wrist_pitch_joint": 0.0,
+#             ".*_wrist_yaw_joint": 0.0,
+
+#             ".*index_.*": 0.0,
+#             ".*_middle_.*": 0.0,
+#             ".*_pinky_.*": 0.0,
+#             ".*_ring_.*": 0.0,
+#             ".*_thumb_.*": 0.0,
+#         },
+#         joint_vel={".*": 0.0},
+#     ),
+#     soft_joint_pos_limit_factor=0.9,
+#     actuators={
+#         "legs": ImplicitActuatorCfg(
+#             joint_names_expr=[".*_hip_yaw_joint", ".*_hip_roll_joint", ".*_hip_pitch_joint", ".*_knee_joint", "torso_joint"],
+#             effort_limit=300,
+#             velocity_limit=100.0,
+#             stiffness={
+#                 ".*_hip_yaw_joint": 150.0,
+#                 ".*_hip_roll_joint": 150.0,
+#                 ".*_hip_pitch_joint": 200.0,
+#                 ".*_knee_joint": 200.0,
+#                 "torso_joint": 200.0,
+#             },
+#             damping={
+#                 ".*_hip_yaw_joint": 5.0,
+#                 ".*_hip_roll_joint": 5.0,
+#                 ".*_hip_pitch_joint": 5.0,
+#                 ".*_knee_joint": 5.0,
+#                 "torso_joint": 5.0,
+#             },
+#         ),
+#         "feet": ImplicitActuatorCfg(
+#             joint_names_expr=[".*_ankle_pitch_joint", ".*_ankle_roll_joint"],
+#             effort_limit=100,
+#             velocity_limit=100.0,
+#             stiffness={".*_ankle_.*": 20.0},
+#             damping={".*_ankle_.*": 4.0},
+#         ),
+#         "arms": ImplicitActuatorCfg(
+#             joint_names_expr=[
+#                 ".*_shoulder_pitch_joint",
+#                 ".*_shoulder_roll_joint",
+#                 ".*_shoulder_yaw_joint",
+#                 ".*_elbow_pitch_joint",
+#                 ".*_elbow_roll_joint",
+#                 ".*_wrist_pitch_joint",
+#                 ".*_wrist_yaw_joint",
+#                 ".*index_.*",
+#                 ".*_middle_.*",
+#                 ".*_pinky_.*",
+#                 ".*_ring_.*",
+#                 ".*_thumb_.*",
+#             ],
+#             effort_limit=300,
+#             velocity_limit=100.0,
+#             stiffness=40.0,
+#             damping=10.0,
+#             armature={
+#                 ".*_shoulder_.*": 0.01,
+#                 ".*_elbow_.*": 0.01,
+#                 ".*_wrist_pitch_joint": 0.001,
+#                 ".*_wrist_yaw_joint": 0.001,
+#                 ".*index_.*": 0.001,
+#                 ".*_middle_.*": 0.001,
+#                 ".*_pinky_.*": 0.001,
+#                 ".*_ring_.*": 0.001,
+#                 ".*_thumb_.*": 0.001,
+
+#             },
+#         ),
+#     },
+# )
+
 G1_CFG = ArticulationCfg(
     spawn=sim_utils.UsdFileCfg(
         usd_path=f"{ISAACLAB_NUCLEUS_DIR}/Robots/Unitree/G1/g1.usd",
diff --git a/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py b/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
index c234e39750..4570acf4b5 100644
--- a/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
+++ b/source/isaaclab_tasks/isaaclab_tasks/manager_based/locomotion/velocity/velocity_env_cfg.py
@@ -101,6 +101,7 @@ class CommandsCfg:
         debug_vis=True,
         ranges=mdp.UniformVelocityCommandCfg.Ranges(
             lin_vel_x=(-1.0, 1.0), lin_vel_y=(-1.0, 1.0), ang_vel_z=(-1.0, 1.0), heading=(-math.pi, math.pi)
+            # lin_vel_x=(0.0, 0.0), lin_vel_y=(-1.0, 1.0), ang_vel_z=(0.0, 0.0), heading=(-math.pi, math.pi)
         ),
     )
 
@@ -262,6 +263,8 @@ class RewardsCfg:
     flat_orientation_l2 = RewTerm(func=mdp.flat_orientation_l2, weight=0.0)
     dof_pos_limits = RewTerm(func=mdp.joint_pos_limits, weight=0.0)
 
+    # knees_axis_parallel_x = RewTerm(func=mdp.knees_axis_parallel_x, weight=1.0)
+
 
 @configclass
 class TerminationsCfg: